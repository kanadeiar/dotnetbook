@page "/core/{id:int}"
@inject CoreBookService CoreBookService
@layout CoreLayout

<PageTitle>@ItemContent?.Name - .NET книга</PageTitle>

<div class="border-1 bg-light shadow rounded-1 p-2">
    <hr/>
    <div>
        @if (ItemContent?.Id > 1)
        {
            <NavLink href="@($"core/{ItemContent?.Id - 1}")" class="link-success me-2">
                Назад
            </NavLink>
        }
        <NavLink href="core" class="link-success me-2">
            Содержание
        </NavLink>
        @if (AnyNextItem)
        {
            <NavLink href="@($"core/{ItemContent?.Id + 1}")" class="link-success me-2">
                Далее
            </NavLink>
        }
    </div>
    <hr/>
    @if (HtmlContent is null)
    {
        <div class="text-center">
            <p class="my-5 py-5">
                Загрузка ...
            </p>
            <br/>
        </div>
    }
    else
    {
        <p>
            @HtmlContent
        </p>
    }
    <hr />
    <div class="text-center">
        @if (ItemContent?.Id > 1)
        {
            <NavLink href="@($"core/{ItemContent?.Id - 1}")" class="link-success me-2">
                Назад
            </NavLink>
        }
        <NavLink href="core" class="link-success me-2">
            Содержание
        </NavLink>
        @if (AnyNextItem)
        {
            <NavLink href="@($"core/{ItemContent?.Id + 1}")" class="link-success me-2">
                Далее
            </NavLink>
        }
    </div>
    <hr/>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Models.Item? ItemContent { get; set; }
    private bool AnyNextItem { get; set; }
    private MarkupString? HtmlContent;
    protected override async Task OnParametersSetAsync()
    {
        ItemContent = CoreBookService.GetItem(Id);
        AnyNextItem = CoreBookService.GetAnyItem(Id + 1);
        if (ItemContent?.Path is { } path)
        {
            HtmlContent = await CoreBookService.GetHtml(path);
        } 
    }
}
